name: CI

on:
  push:
  pull_request:

defaults:
  run:
    shell: pwsh

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: 'x64'
    - name: Setup coxbuild
      run: pip install coxbuild
    - name: Build Web
      run: coxbuild build:web
    - name: Build Package
      run: coxbuild build:package
    - name: Install Package
      run: coxbuild installBuilt
    - name: Upload package artifacts
      uses: actions/upload-artifact@v3
      with:
        name: package
        path: ./dist
    - name: Generate documents
      run: |
        cd docs
        paperead build
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: docs
        path: ./docs/dist
  deploy:
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push'}}
    needs: [package]
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: docs
        path: ./docs/dist
    - name: Deploy docs to netlify
      uses: netlify/actions/cli@master
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      with:
        args: deploy --dir=./docs/dist --prod
        secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_SITE_ID"]'
    - name: Download package artifacts
      uses: actions/download-artifact@v3
      with:
        name: package
        path: ./dist
    - name: Deploy packages
      if: ${{ contains(github.event.head_commit.message, '[release]') }}
      env:
        PYTHONUTF8: 1
        TWINE_USERNAME: '__token__'
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        python -m pip install --upgrade build twine
        python -m twine upload --skip-existing --repository pypi "dist/*"